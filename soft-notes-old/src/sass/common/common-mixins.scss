/*
 *
 * MIXINS
 *
 */


@mixin border-radius($radius){

  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;

}

@mixin transition($transition){

  -webkit-transition: $transition;
     -moz-transition: $transition;
      -ms-transition: $transition;
          transition: $transition;

}

@mixin filter($filter){

  -webkit-filter: $filter;
     -moz-filter: $filter;
      -ms-filter: $filter;
          filter: $filter;

}

@mixin transform($transform){

  -webkit-transform: $transform;
     -moz-transform: $transform;
      -ms-transform: $transform;
          transform: $transform;

}

@mixin opacity($opacity) {

    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie); //IE8

}

@mixin box-shadow($shadow){

  -webkit-box-shadow: $shadow;
     -moz-box-shadow: $shadow;
      -ms-box-shadow: $shadow;
          box-shadow: $shadow;

}

@mixin text-shadow($shadow){

  -webkit-text-shadow: $shadow;
     -moz-text-shadow: $shadow;
      -ms-text-shadow: $shadow;
          text-shadow: $shadow;

}

@mixin block(){

  float:left;
  width:100%;
  display: block;
  position: relative;

}

@mixin pseudo($display: block, $pos: absolute, $content: ''){

    content: $content;
    display: $display;
    position: $pos;

}

@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false){

    @include pseudo($pos: $position);
    width: 0;
    height: 0;
    @if $round {
        border-radius: 3px;
    }
    @if $direction == down {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-top: $size solid $color;
        margin-top: 0 - round( $size / 2.5 );
    } @else if $direction == up {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-bottom: $size solid $color;
        margin-bottom: 0 - round( $size / 2.5 );
    } @else if $direction == right {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-left: $size solid $color;
        margin-right: -$size;
    } @else if  $direction == left {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-right: $size solid $color;
        margin-left: -$size;
    }

}

@mixin input-placeholder {

    &.placeholder { @content; }
    &:-moz-placeholder { @content; }
    &::-moz-placeholder { @content; }
    &:-ms-input-placeholder { @content; }
    &::-webkit-input-placeholder { @content; }

}

$breakpoints: (
    "1280":        1280px,
    "1200":        1200px,
    "1100":        1100px,
    "1000":        1000px,
    "900" :         900px,
    "800" :         800px,
    "700" :         700px,
    "600" :         600px,
    "500" :         500px,
    "400" :         400px,
);

@mixin mq($width, $type: min) {
    @if map_has_key($breakpoints, $width) {
        $width: map_get($breakpoints, $width);
        @if $type == max {
            $width: $width - 1px;
        }
        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}

@mixin gradient($args...) {

  background-image: -o-linear-gradient($args); 
  background-image: -moz-linear-gradient($args); 
  background-image: -webkit-linear-gradient($args); 
  background-image: linear-gradient($args); 
  
}


